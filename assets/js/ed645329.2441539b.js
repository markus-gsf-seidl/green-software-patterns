"use strict";(self.webpackChunkgsf_docusaurus_template=self.webpackChunkgsf_docusaurus_template||[]).push([[4236],{2578:e=>{e.exports=JSON.parse('{"label":"cloud","permalink":"/tags/cloud","allTagsPath":"/tags","count":8,"items":[{"id":"catalog/cloud/implement-stateless-design","title":"Implement stateless design","description":"Service state refers to the in-memory or on-disk data required by a service to function. State includes the data structures and member variables that the service reads and writes. Depending on how the service is architected, the state might also include files or other resources stored on the disk. Applications that consume large memory or on-disk data require larger VM sizes, especially for cloud computing where you would need larger VM SKUs to support high RAM capacity and multiple data disks.","permalink":"/catalog/cloud/implement-stateless-design"},{"id":"catalog/cloud/match-slo","title":"Match your service level objectives to business needs","description":"If service downtimes are acceptable it\'s better to not strive for highest availability but to design the solution according to real business needs. Lower availability guarantees can help reduce energy consumption by using less infrastructure components.","permalink":"/catalog/cloud/match-slo"},{"id":"catalog/cloud/minimizing-deployed-environments","title":"Minimize the total number of deployed environments","description":"In a given application, there may be a need to utilize multiple environments in the application workflow. Typically, a development environment is used for regular updates, while staging or testing enviroments are used to make sure there are no issues before code reaches a production environment where users may have access. Each added environment has an increasing energy impact, which in turn creates more emissions. As such, it is important to understand the necessity of each enviroment and it\'s environmental impact.","permalink":"/catalog/cloud/minimizing-deployed-environments"},{"id":"catalog/cloud/queue-non-urgent-requests","title":"Queue non-urgent processing requests","description":"All systems have periods of peak and low load. From a hardware-efficiency perspective, we are more efficient with hardware if we minimise the impact of request spikes with an implementation that allows an even utilization of components. From an energy-efficiency perspective, we are more efficient with energy if we ensure that idle resources are kept to a minimum.","permalink":"/catalog/cloud/queue-non-urgent-requests"},{"id":"catalog/cloud/scale-kubernetes-workloads-based-on-events","title":"Scale Kubernetes workloads based on relevent demand metrics","description":"By default, Kubernetes scales workloads based on CPU and RAM utilization. In practice, however, it\'s difficult to correlate your application\'s demand drivers with CPU and RAM utilization. Scaling your workload based on relevant demand metrics that drive scaling of your applications, such as HTTP requests, queue length, and cloud alerting events can help reduce resource utilization, and therefore also your carbon emissions.","permalink":"/catalog/cloud/scale-kubernetes-workloads-based-on-events"},{"id":"catalog/cloud/scan-for-vulnerabilities","title":"Scan for vulnerabilities","description":"Many attacks on cloud infrastructure seek to misuse deployed resources, which leads to an unnecessary spike in usage and cost.","permalink":"/catalog/cloud/scan-for-vulnerabilities"},{"id":"catalog/cloud/evaluate-whether-to-use-TLS-termination","title":"Terminate TLS at border gateway","description":"Transport Layer Security (TLS) ensures that all data passed between the web server and web browsers remain private and encrypted. However, terminating and re-establishing TLS increases CPU usage and might be unnecessary in certain architectures.","permalink":"/catalog/cloud/evaluate-whether-to-use-TLS-termination"},{"id":"catalog/cloud/use-cloud-native-network-security-tools-and-controls","title":"Use cloud native network security tools and controls","description":"Network and web application firewalls provide protection against most common attacks and load shedding bad bots. These tools help to remove unnecessary data transmission and reduce the burden on the cloud infrastructure, while also using lower bandwidth and less infrastructure.","permalink":"/catalog/cloud/use-cloud-native-network-security-tools-and-controls"}]}')}}]);