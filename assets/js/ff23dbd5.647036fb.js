"use strict";(self.webpackChunkgsf_docusaurus_template=self.webpackChunkgsf_docusaurus_template||[]).push([[4876],{9627:e=>{e.exports=JSON.parse('{"label":"role:software-engineer","permalink":"/tags/role-software-engineer","allTagsPath":"/tags","count":9,"items":[{"id":"catalog/web/avoid-tracking-unnecessary-data","title":"Avoid tracking unnecessary data","description":"User tracking, user data collection and targeting in things like advertisements are responsible for significant energy use in many digital products, and services.","permalink":"/catalog/web/avoid-tracking-unnecessary-data"},{"id":"catalog/cloud/implement-stateless-design","title":"Implement stateless design","description":"Service state refers to the in-memory or on-disk data required by a service to function. State includes the data structures and member variables that the service reads and writes. Depending on how the service is architected, the state might also include files or other resources stored on the disk. Applications that consume large memory or on-disk data require larger VM sizes, especially for cloud computing where you would need larger VM SKUs to support high RAM capacity and multiple data disks.","permalink":"/catalog/cloud/implement-stateless-design"},{"id":"catalog/cloud/optimise-storage-resource-utilisation","title":"Optimise storage utilization","description":"It\'s better to maximise storage utilisation so the storage layer is optimised for the task, not only in terms of energy proportionality but also in terms of embodied carbon. Two storage units running at low utilization rates will consume more energy than one running at a high utilization rate. In addition, the unused capacity on the underutilised storage unit could be more efficiently used for another task or process.","permalink":"/catalog/cloud/optimise-storage-resource-utilisation"},{"id":"catalog/cloud/optimize-avg-cpu-utilization","title":"Optimize average CPU utilization","description":"CPU usage and utilization varies throughout the day, sometimes wildly for different computational requirements. The larger the variance between the average and peak CPU utilization values, the more resources need to be provisioned in stand-by mode to absorb those spikes in traffic.","permalink":"/catalog/cloud/optimize-avg-cpu-utilization"},{"id":"catalog/cloud/optimize-peak-cpu-utilization","title":"Optimize peak CPU utilization","description":"CPU usage and utilization varies throughout the day, sometimes wildly for different computational requirements. The larger the variance between the average and peak CPU utilization values, the more resources need to be provisioned in stand-by mode to absorb those spikes in traffic.","permalink":"/catalog/cloud/optimize-peak-cpu-utilization"},{"id":"catalog/cloud/scale-kubernetes-workloads-based-on-events","title":"Scale Kubernetes workloads based on relevent demand metrics","description":"By default, Kubernetes scales workloads based on CPU and RAM utilization. In practice, however, it\'s difficult to correlate your application\'s demand drivers with CPU and RAM utilization. Scaling your workload based on relevant demand metrics that drive scaling of your applications, such as HTTP requests, queue length, and cloud alerting events can help reduce resource utilization, and therefore also your carbon emissions.","permalink":"/catalog/cloud/scale-kubernetes-workloads-based-on-events"},{"id":"catalog/cloud/shed-lower-priority-traffic","title":"Shed lower priority traffic","description":"When resources are constrained during high-traffic events or when carbon intensity is high, more carbon emissions will be generated from your system. Adding more resources to support increased traffic requirements introduces more embodied carbon and more demand for electricity. Continuing to handle all requests during high carbon intensity will increase overall emissions for your system. Shedding traffic that is lower priority during these scenarios will save on resources and carbon emissions. This approach requires an understanding of your traffic, including which call requests are critical and which can best withstand retry attempts and failures.","permalink":"/catalog/cloud/shed-lower-priority-traffic"},{"id":"catalog/cloud/evaluate-whether-to-use-TLS-termination","title":"Terminate TLS at border gateway","description":"Transport Layer Security (TLS) ensures that all data passed between the web server and web browsers remain private and encrypted. However, terminating and re-establishing TLS increases CPU usage and might be unnecessary in certain architectures.","permalink":"/catalog/cloud/evaluate-whether-to-use-TLS-termination"},{"id":"catalog/cloud/use-cloud-native-network-security-tools-and-controls","title":"Use cloud native network security tools and controls","description":"Network and web application firewalls provide protection against most common attacks and load shedding bad bots. These tools help to remove unnecessary data transmission and reduce the burden on the cloud infrastructure, while also using lower bandwidth and less infrastructure.","permalink":"/catalog/cloud/use-cloud-native-network-security-tools-and-controls"}]}')}}]);